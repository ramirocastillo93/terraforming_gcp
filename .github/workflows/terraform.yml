name: "Deploying GKE with Terraform"

on:
  workflow_call:
    inputs:
      deployment_directory:
        required: true
        type: string
      # gh_env:
      #   required: true
      #   type: string
    secrets:
      google_credentials:
        required: true

jobs:
  terraform-init-validate-plan-build:
    name: "Terraform"
    runs-on: ubuntu-latest
    # environment: ${{ input.gh_env }}
    env: 
      GOOGLE_CREDENTIALS: ${{ secrets.google_credentials }}
    defaults:
      run:
        working-directory: ${{ inputs.deployment_directory }}
    steps:
      # This step will allow the workflow to use a copy of the repository's code.
      - name: Checkout
        uses: actions/checkout@v2

      # This step will install all the TF dependencies in order to properly run this workflow.
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: TF Init
        run: terraform init

      - name: TF FMT
        run: terraform fmt -recursive -check 

      - name: TF Plan (Dev)
        if: github.ref == 'refs/head/main' && github.event_name == 'pull_request'
        run: terraform plan -var-file=dev.tfvars -out=dev.tfplan -lock=false

      - name: TF Plan (Prod)
        if: github.ref == 'refs/head/main' && github.event_name == 'release' && github.event.action == 'created'
        run: terraform plan -var-file=prod.tfvars -out=prod.tfplan -lock=false
      
      - name: TF Apply (Dev)
        if: github.ref == 'refs/head/main' && github.event_name == 'pull_request'
        run: terraform apply -auto-approve dev.tfplan

      - name: TF Apply (Prod)
        if: github.ref == 'refs/head/main' && github.event_name == 'release' && github.event.action == 'created'
        run: terraform apply -auto-approve prod.tfplan